<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../../style/inventoryInitial.css">
    <title>Tambah Barang</title>
</head>
<body>

    <div class="container">
        <form action="/product/newStock" method="POST">
            <div class="title">
                <h2><center>Tambah Barang</center></h2>
            </div>
            <div class="content">
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th style="width: 50%;">Nama Barang</th>
                            <th style="width: 25%;">Gudang</th>
                            <th style="width: 25%;">Satuan</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="number">1</td>
                            <td><input required type="text" name="name" id="name" class="input-data"></td>
                            <td>
                                <select name="warehouse" id="warehouse">
                                    <% warehouse.forEach(x => { %>
                                        <option value="<%= x.id %>"><%= x.name %></option>
                                    <% }) %>
                                </select>
                            </td>
                            <td><input required type="text" name="unit" id="unit" class="input-data"></td>
                            <td><img src="../../img/plus.png" alt="" class="delete"></td>
                        </tr>
                    </tbody>
                </table>
                <div id="addButton"><img src="../../img/plus.png" alt=""></div>
            </div>
            <div class="btn-container">
                <button type="submit" class="btn">Simpan</button>
            </div>
        </form>
    </div>
    <%- query.errorMessage != undefined ? `<div class="error-message">Nama barang telah digunakan</div>` : '' %>

</body>
<script src="../../script/socket.io.js"></script>
<script>
    document.querySelectorAll('.only-number').forEach(x => {
        x.addEventListener('keydown', function(e) {
            if( isNaN(e.key) && e.key != 'Backspace' && e.key != 'ArrowLeft' && e.key != 'ArrowRight' && e.key != 'Tab' ) return e.preventDefault()
            if( e.code == 'Space' ) return e.preventDefault()
        })
        x.addEventListener('keyup', function(e) {
            if( this.value.length > 3 ) {
                let valBefore = this.value.split(',')
                let valAfter = valBefore.join('').split('').reverse()
                let val = []
            
                for( let i = 0; i < valAfter.join('').length; i+=3 ) {
                    val.push(valAfter.slice(i, i+3).reverse().join(''))
                }
                this.value = val.reverse()
            }
        })
    })

    const addButton = document.getElementById('addButton')
    addButton.addEventListener('click', function() {
        const tbody = document.querySelector('tbody')
        const lastRow = tbody.lastElementChild
        const newRow = lastRow.cloneNode(true)
        const lastRowNumber = parseInt(lastRow.firstElementChild.textContent)
        newRow.firstElementChild.textContent = (lastRowNumber + 1).toString()
        newRow.querySelectorAll('.input-data').forEach(input => input.value = '')
        tbody.appendChild(newRow)
        newRow.querySelector('.delete').addEventListener('click', function() {
            if( document.querySelectorAll('.delete').length > 1 ) {
                const currentRow = this.parentElement.parentElement;
                currentRow.remove()
                updateNumbering()
            }
        })
        newRow.querySelectorAll('.only-number').forEach(x => {
            x.addEventListener('keydown', function(e) {
                if( isNaN(e.key) && e.key != 'Backspace' && e.key != 'ArrowLeft' && e.key != 'ArrowRight' && e.key != 'Tab' ) return e.preventDefault()
                if( e.code == 'Space' ) return e.preventDefault()
            })
            x.addEventListener('keyup', function(e) {
                if( this.value.length > 3 ) {
                    let valBefore = this.value.split(',')
                    let valAfter = valBefore.join('').split('').reverse()
                    let val = []
                
                    for( let i = 0; i < valAfter.join('').length; i+=3 ) {
                        val.push(valAfter.slice(i, i+3).reverse().join(''))
                    }
                    this.value = val.reverse()
                }
            })
        })
    })

    function updateNumbering() {
        const numberCells = document.querySelectorAll('.number')
        numberCells.forEach((cell, index) => {
            cell.textContent = (index + 1).toString()
        })
    }

    document.querySelector('.delete').addEventListener('click', function() {
        if( document.querySelectorAll('.delete').length > 1 ) {
            const currentRow = this.parentElement.parentElement
            currentRow.remove()
            updateNumbering()
        }
    })

    if( document.querySelector('.error-message') != undefined ) {
        document.querySelector('.error-message').innerText = document.querySelector('.error-message').innerText.split('-').reduce((acc, curr) => acc + ' ' + curr)
        
        setTimeout(() => document.querySelector('.error-message').style.bottom = '20px', 500)
        setTimeout(() => {
            document.querySelector('.error-message').style.bottom = '-50px'
            setTimeout(() => document.querySelector('.error-message').remove(), 1000)
        }, 3200)
    }
</script>
</html>
